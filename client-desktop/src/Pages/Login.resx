<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>